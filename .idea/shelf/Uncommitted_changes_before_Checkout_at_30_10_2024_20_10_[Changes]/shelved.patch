Index: app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/WorkerBee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.vsu.amm.java;\r\n\r\npublic class WorkerBee extends AbstractBee {\r\n    public WorkerBee(int age) {\r\n        super(\"Worker\", age);\r\n    }\r\n\r\n    @Override\r\n    public void gatherNectar() {\r\n        System.out.println(\"Worker bee gathering nectar\");\r\n    }\r\n\r\n    @Override\r\n    public void produceHoney() {\r\n        System.out.println(\"Worker bee producing honey\");\r\n    }\r\n\r\n    @Override\r\n    public void defendHive() {\r\n        System.out.println(\"Worker bee defending the hive\");\r\n    }\r\n\r\n    @Override\r\n    public void layEggs() {\r\n        System.out.println(\"Worker bee cannot laying eggs\");\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/WorkerBee.java b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/WorkerBee.java
--- a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/WorkerBee.java	(revision e455ffa513038e7b3f6304ac1e4b2b57c1f73703)
+++ b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/WorkerBee.java	(date 1730304168405)
@@ -1,8 +1,23 @@
 package ru.vsu.amm.java;
 
-public class WorkerBee extends AbstractBee {
-    public WorkerBee(int age) {
-        super("Worker", age);
+import java.util.Objects;
+
+public class WorkerBee extends Bee {
+    private int numberOfNectarGathered;
+    private int numberOfHoneyProduced;
+
+    public WorkerBee(int age, int numberOfNectarGathered, int numberOfHoneyProduced) {
+        super(BeeType.WORKER, age);
+        this.numberOfNectarGathered = numberOfNectarGathered;
+        this.numberOfHoneyProduced = numberOfHoneyProduced;
+    }
+
+    public int getNumberOfNectarGathered() {
+        return numberOfNectarGathered;
+    }
+
+    public int getNumberOfHoneyProduced() {
+        return numberOfHoneyProduced;
     }
 
     @Override
@@ -24,4 +39,28 @@
     public void layEggs() {
         System.out.println("Worker bee cannot laying eggs");
     }
+
+    @Override
+    public String toString() {
+        return super.toString() + ", Nectar gathered: " + numberOfNectarGathered
+                + ", Honey produced: " + numberOfHoneyProduced;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if(!super.equals(obj) || getClass() != obj.getClass()) {
+            return false;
+        }
+        WorkerBee other = (WorkerBee) obj;
+        return numberOfNectarGathered == other.numberOfNectarGathered
+                && numberOfHoneyProduced == other.numberOfHoneyProduced;
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(super.hashCode(), numberOfNectarGathered, numberOfHoneyProduced);
+    }
 }
Index: app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Bee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.vsu.amm.java;\r\n\r\npublic interface Bee {\r\n    void gatherNectar();\r\n    void produceHoney();\r\n    void layEggs();\r\n}\r\n
===================================================================
diff --git a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Bee.java b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Bee.java
--- a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Bee.java	(revision e455ffa513038e7b3f6304ac1e4b2b57c1f73703)
+++ b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Bee.java	(date 1730304911895)
@@ -1,7 +1,45 @@
 package ru.vsu.amm.java;
 
-public interface Bee {
-    void gatherNectar();
-    void produceHoney();
-    void layEggs();
-}
+import java.util.Objects;
+
+public abstract class Bee implements ActionsBee {
+    private BeeType type;
+    private int age;
+
+    protected Bee(BeeType type, int age) {
+        this.type = type;
+        this.age = age;
+    }
+
+    public BeeType getType() {
+        return type;
+    }
+
+    public int getAge() {
+        return age;
+    }
+
+    public abstract void defendHive();
+
+    @Override
+    public String toString() {
+        return "Type: " + type + ", Age: " + age;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null || getClass() != obj.getClass()) {
+            return false;
+        }
+        Bee other = (Bee) obj;
+        return age == other.age && type.equals(other.type);
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(type, age);
+    }
+}
\ No newline at end of file
Index: app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/DroneBee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.vsu.amm.java;\r\n\r\npublic class DroneBee extends AbstractBee {\r\n    public DroneBee(int age) {\r\n        super(\"Drone\", age);\r\n    }\r\n\r\n    @Override\r\n    public void gatherNectar() {\r\n        System.out.println(\"Drone bee cannot gather nectar\");\r\n    }\r\n\r\n    @Override\r\n    public void produceHoney() {\r\n        System.out.println(\"Drone bee cannot produce honey\");\r\n    }\r\n\r\n    @Override\r\n    public void defendHive() {\r\n        System.out.println(\"Drone bee defending the hive\");\r\n    }\r\n\r\n    @Override\r\n    public void layEggs() {\r\n        System.out.println(\"Drone bee cannot laying eggs\");\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/DroneBee.java b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/DroneBee.java
--- a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/DroneBee.java	(revision e455ffa513038e7b3f6304ac1e4b2b57c1f73703)
+++ b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/DroneBee.java	(date 1730302939704)
@@ -1,8 +1,23 @@
 package ru.vsu.amm.java;
 
-public class DroneBee extends AbstractBee {
-    public DroneBee(int age) {
-        super("Drone", age);
+import java.util.Objects;
+
+public class DroneBee extends Bee {
+    private boolean canFly;
+    private int flightDistance;
+
+    public DroneBee(int age, boolean canFly, int flightDistance) {
+        super(BeeType.DRONE, age);
+        this.canFly = canFly;
+        this.flightDistance = flightDistance;
+    }
+
+    public boolean canFly() {
+        return canFly;
+    }
+
+    public int getFlightDistance() {
+        return flightDistance;
     }
 
     @Override
@@ -24,4 +39,26 @@
     public void layEggs() {
         System.out.println("Drone bee cannot laying eggs");
     }
+
+   @Override
+    public String toString() {
+       return super.toString() + ", Can fly: " + canFly + ", Flight distance: " + flightDistance;
+   }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if(!super.equals(obj) || getClass() != obj.getClass()) {
+            return false;
+        }
+        DroneBee other = (DroneBee) obj;
+        return canFly == other.canFly && flightDistance == other.flightDistance;
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(super.hashCode(), canFly, flightDistance);
+    }
 }
Index: app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/QueenBee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.vsu.amm.java;\r\n\r\npublic class QueenBee extends AbstractBee {\r\n    public QueenBee(int age) {\r\n        super(\"Queen\", age);\r\n    }\r\n\r\n    @Override\r\n    public void gatherNectar() {\r\n        System.out.println(\"Queen bee gathering nectar\");\r\n    }\r\n\r\n    @Override\r\n    public void produceHoney() {\r\n        System.out.println(\"Queen bee producing honey\");\r\n    }\r\n\r\n    @Override\r\n    public void defendHive() {\r\n        System.out.println(\"Queen bee defending the hive\");\r\n    }\r\n\r\n    @Override\r\n    public void layEggs() {\r\n        System.out.println(\"Queen bee laying eggs\");\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/QueenBee.java b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/QueenBee.java
--- a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/QueenBee.java	(revision e455ffa513038e7b3f6304ac1e4b2b57c1f73703)
+++ b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/QueenBee.java	(date 1730303922684)
@@ -1,8 +1,23 @@
 package ru.vsu.amm.java;
 
-public class QueenBee extends AbstractBee {
-    public QueenBee(int age) {
-        super("Queen", age);
+import java.util.Objects;
+
+public class QueenBee extends Bee {
+    private int numberOfEggsLaid;
+    private int numberOfDronesProduced;
+
+    public QueenBee(int age, int numberOfEggsLaid, int numberOfDronesProduced) {
+        super(BeeType.QUEEN, age);
+        this.numberOfEggsLaid = numberOfEggsLaid;
+        this.numberOfDronesProduced = numberOfDronesProduced;
+    }
+
+    public int getNumberOfDronesProduced() {
+        return numberOfEggsLaid;
+    }
+
+    public int getNumberOfEggsLaid() {
+        return numberOfDronesProduced;
     }
 
     @Override
@@ -24,4 +39,28 @@
     public void layEggs() {
         System.out.println("Queen bee laying eggs");
     }
+
+    @Override
+    public String toString() {
+        return super.toString() + ", Eggs laid: " + numberOfEggsLaid
+                + ", Drones produced: " + numberOfDronesProduced;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if(!super.equals(obj) || getClass() != obj.getClass()) {
+            return false;
+        }
+        QueenBee other = (QueenBee) obj;
+        return numberOfEggsLaid == other.numberOfEggsLaid
+                && numberOfDronesProduced == other.numberOfDronesProduced;
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(super.hashCode(), numberOfEggsLaid, numberOfDronesProduced);
+    }
 }
Index: app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.vsu.amm.java;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Bee bee1 = new WorkerBee(2);\r\n        Bee bee2 = new DroneBee(1);\r\n        Bee bee3 = new QueenBee(3);\r\n\r\n        System.out.println(bee1);\r\n        System.out.println(bee2.equals(bee3));\r\n        System.out.println(bee1.hashCode());\r\n\r\n        if (bee1 instanceof WorkerBee) {\r\n            ((WorkerBee) bee1).defendHive();\r\n        }\r\n\r\n        if (bee3 instanceof QueenBee) {\r\n            ((QueenBee) bee3).layEggs();\r\n        }\r\n    }\r\n}
===================================================================
diff --git a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Main.java b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Main.java
--- a/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Main.java	(revision e455ffa513038e7b3f6304ac1e4b2b57c1f73703)
+++ b/app/G9/barbashina.irina/lab2/src/main/java/ru/vsu/amm/java/Main.java	(date 1730308178860)
@@ -2,20 +2,31 @@
 
 public class Main {
     public static void main(String[] args) {
-        Bee bee1 = new WorkerBee(2);
-        Bee bee2 = new DroneBee(1);
-        Bee bee3 = new QueenBee(3);
+        ActionsBee bee1 = new WorkerBee(1, 500, 200);
+        ActionsBee bee2 = new DroneBee(2, true, 50);
+        ActionsBee bee3 = new QueenBee(3, 100, 80);
 
         System.out.println(bee1);
+        System.out.println(bee2);
+        System.out.println(bee3);
         System.out.println(bee2.equals(bee3));
         System.out.println(bee1.hashCode());
 
         if (bee1 instanceof WorkerBee) {
-            ((WorkerBee) bee1).defendHive();
+            System.out.println("bee1 is WorkerBee");
+            bee1.gatherNectar();
+            bee1.produceHoney();
+        } else {
+            System.out.println("bee1 is not WorkerBee");
         }
 
-        if (bee3 instanceof QueenBee) {
-            ((QueenBee) bee3).layEggs();
+        if (!(bee3 instanceof WorkerBee)) {
+            System.out.println("bee3 is not WorkerBee");
+            bee3.gatherNectar();
+            bee3.produceHoney();
+            bee3.layEggs();
+        } else {
+            System.out.println("bee3 is WorkerBee");
         }
     }
 }
\ No newline at end of file
